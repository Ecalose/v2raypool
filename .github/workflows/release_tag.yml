# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: CreateRelease

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        build: [macos, linux, windows]
        include:
          - build: macos
            os: macos-latest
            file-suf: ''
          - build: linux
            os: ubuntu-18.04
            file-suf: ''
          - build: windows
            os: windows-latest
            file-suf: '.exe'
    
    permissions: # 需要设置写权限才能自动发布
      contents: write

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@master
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.x'
        
    - name: Install dependencies
      run: |
        go env -w GO111MODULE=on
        go env -w GOPROXY=https://goproxy.cn,direct
        go mod tidy
      
    - name: Build
      run: |
        CGO_ENABLED=0 go build -v -a -o main/v2raypool${{ matrix.file-suf }} ./main

    - name: Package # TODO  tar (child): v2raypool-windows-refs/heads/master.tar.gz: Cannot open: No such file or directory
      run: tar zcvf v2raypool-${{ matrix.build }}-${{ github.ref }}.tar.gz ./main/v2raypool${{ matrix.file-suf }} ./main/resource

      # 上传附件
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: v2raypool-${{ matrix.build }}-${{ github.ref }}.tar.gz
        path: v2raypool-${{ matrix.build }}-${{ github.ref }}.tar.gz

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: Please refer to [CHANGELOG.md](https://github.com/iotames/v2raypool/blob/master/CHANGELOG.md) for details.
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: v2raypool-${{ matrix.build }}-${{ github.ref }}.tar.gz
        asset_name: v2raypool-${{ matrix.build }}-${{ github.ref }}.tar.gz
        asset_content_type: application/zip